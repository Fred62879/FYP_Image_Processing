#
# para: op - output directory
#       ip - input directory
#	fold - img display fold
#       threshold - set-up value for thresholding
#       sz - length of transformed chip
# output: none (img written to op)
#
#

def writeoutIntensity(op, ip, fold, threshold, sz):

	def loadImg(imgin):
		images = []
		#for filename in os.listdir(folder):
		#	img = cv2.imread(os.path.join(folder,filename))
		for i in range(0, len(imgin)):
			img = cv2.imread(imgin[i])
			if img is not None:
				images.append(img)
		return images

	def name(ip, op):
		imgin = []
		imgout = []
		for filename in os.listdir(ip):
			imgin.append(os.path.join(ip, filename))
			s = list(filename)
			s[len(s) - 3: len(s)] = 'csv'
			f = ''.join(s)
			imgout.append(os.path.join(op, f))
		return imgin, imgout

	# a is size of square/spot; c is num of square/spot
	def convert(res, a, c):
		newres = []
		for i in range(0, a):
			for j in range(0, a):
				id = i * a + j
				cur = []
				for s in range(0, c):
					for k in range(0, 3):
						cur.append(res[s][i][j][k])
				newres.append(cur)
		return newres

	def wrout(a, c, filename, intensity):
		newins = convert(intensity, a, c)
		if (len(newins) != a * a):
			return 1
		with open(filename, 'w', newline = '') as f:
			writer = csv.writer(f, delimiter = ',')
			for i in range(0, a):
				for j in range(0, a):
					b = writer.writerow(newins[i * a + j])

	imgin, imgout = name(ip, op)
	images = loadImg(imgin)
	for i in range(0, len(images)):
		intensity = intenExtract(imgin[i], threshold, sz)
		wrout(30, 36, imgout[i], intensity)