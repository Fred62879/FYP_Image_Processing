-Apr 8 2019, folder name change, remove 20190305.. suffix

**** Crop ****
// same order for both version1 & 2 folder
error = crop('20190305_lightconditions', '20190305_lightconditions_c')
error = crop('1-orig', '2-crop')
error = crop('1-orig_tc', '2-crop')

**** Distance ****
# version 1 folder
// before norm
allDist = distanceAll('20190305_lightconditions_c', 3)
# allDist[0/1] - t1/2 chip 1
# allDist[0][0~2] - dist between l1&l2, l1&l3, and l2&l3
array([[ -1,  -1, 297],
       [ -1, 332,  -1],
       [315, 341, 311],
       [319, 341, 305],
       [305, 336, 313],
       [326, 338, 298],
       [ -1,  -1, 306],
       [300, 345, 310],
       [ -1,  -1, 305],
       [ -1,  -1, 299],
       [ -1,  -1, 296],
       [318, 338, 302]], dtype=int64)

a = allDist.transpose(1, 0)
array([[ -1,  -1, 315, 319, 305, 326,  -1, 300,  -1,  -1,  -1, 318],
       [ -1, 332, 341, 341, 336, 338,  -1, 345,  -1,  -1,  -1, 338],
       [297,  -1, 311, 305, 313, 298, 306, 310, 305, 299, 296, 302]],
      dtype=int64)

m1 = np.mean(a[0][a[0]!= -1])
m2 = np.mean(a[1][a[1]!= -1])
m3 = np.mean(a[2][a[2]!= -1])


**** Normalize and output ****
# version 2 & 1 folder, functions in bm_v5
// collect
ip = '20190305_lightconditions_c'
ip = '2-crop'
op = ['20190305_lightconditions_nhb', '20190305_lightconditions_nwp1', '20190305_lightconditions_nwp2']
op = ['3.1-nhb', '3.2-nwp1', '3.3-nwp2']

# pdt[0] - Under light1
# pdt[0][0] - 1st img
# pdt[0][0][0] - 1st block
# pdt[0][0][0][0] - R value

hbabpdt, hbabsdt = normCollect(ip, op[0], para, 0, .1, 200, (42, 3))   # hb
wp1abpdt, wp1absdt = normCollect(ip, op[1], para, 1, .1, 240, (42, 3)) # wp1
wp2abpdt, wp2absdt = normCollect(ip, op[2], para, 2, .1, 240, (42, 3)) # wp2
origpdt, origsdt = normCollect(ip, '', para, 3, .1, 200, (42, 3))   # orig

// Across block/Image-wise output

nm = ['_patch_acrossBlock.csv','_spot_acrossBlock.csv']
op = '4-dt/'
algr = ['histogramBased', 'whitePatch1', 'whitePatch2']

wrout(hbabpdt, hbabsdt, algr[0], nm, op)   # hb
wrout(wp1abpdt, wp1absdt, algr[1], nm, op) # wp1
wrout(wp2abpdt, wp2absdt, algr[2], nm, op) # wp2
wrout(origpdt, origsdt, 'original', nm, op) # orig

**** Distance ****
// after norm
# hb
allDist = distanceAll('20190305_lightconditions_nhb', 3)
array([[ -1,  -1, 140],
       [ -1, 191,  -1],
       [211, 209, 192],
       [216, 209, 179],
       [214, 202, 215],
       [239, 212, 186],
       [ -1,  -1, 159],
       [161, 145, 144],
       [ -1,  -1, 146],
       [ -1,  -1, 160],
       [ -1,  -1, 152],
       [164, 153, 147]], dtype=int64)
a = allDist.transpose(1, 0)
m1 = np.mean(a[0][a[0]!= -1])
m2 = np.mean(a[1][a[1]!= -1])
m3 = np.mean(a[2][a[2]!= -1])

# wp1
allDist = distanceAll('20190305_lightconditions_nwp1', 3)
array([[ -1,  -1, 291],
       [ -1, 346,  -1],
       [285, 341, 332],
       [282, 337, 331],
       [279, 334, 321],
       [289, 335, 317],
       [ -1,  -1, 297],
       [261, 326, 310],
       [ -1,  -1, 331],
       [ -1,  -1, 336],
       [ -1,  -1, 254],
       [293, 342, 303]], dtype=int64)

# wp2
allDist = distanceAll('20190305_lightconditions_nwp2', 3)
array([[ -1,  -1, 168],
       [ -1, 251,  -1],
       [251, 261, 236],
       [256, 264, 220],
       [247, 254, 251],
       [268, 272, 215],
       [ -1,  -1, 205],
       [192, 207, 194],
       [ -1,  -1, 183],
       [ -1,  -1, 184],
       [ -1,  -1, 189],
       [226, 232, 190]], dtype=int64)


**** MAD (ANOVA) patch ****
// (I) Across blocks/image-wise
(i) orig
resog = madIw('2-crop')
ans = meanMadIw(resog, 3)
array([[15.77603599, 18.94157005, 17.9505642 ],
       [21.40009252, 26.31595014, 24.53527582],
       [13.65092802, 18.53828078, 15.54710106]])

(ii) nhb
reshb = madIw('3.1-nhb')
ans = meanMadIw(reshb, 3)
array([[16.03742379, 19.48323779, 18.33668594],
       [14.29859919, 19.28070853, 16.89166095],
       [12.77818903, 17.69569099, 15.31470016]])

(iii) wp1
reswp1 = madIw('3.2-nwp1')
ans = meanMadIw(reswp1, 3)
array([[21.19678287, 25.84121142, 24.19229863],
       [19.78622527, 24.83428502, 22.47559717],
       [13.88153331, 18.19833515, 17.91298096]])

(iv) wp2
reswp2 = madIw('3.3-nwp2')
ans = meanMadIw(reswp2, 3)
array([[24.14760595, 29.17311749, 27.03523667],
       [18.40820952, 24.44079479, 21.60297098],
       [14.25287556, 18.68282643, 18.3814091 ]])

(v) blur
array([[ 8.78226099,  9.27382231,  8.6533762 ],
       [16.90466783, 18.15084567, 18.39543023],
       [ 5.91858466,  6.34206648,  5.30953132]])

array([[7.54625701, 8.45748867, 8.04007971],
       [5.59036585, 6.7672144 , 6.45235757],
       [4.18016927, 4.90651075, 4.62458116]])

array([[11.76287409, 12.93048665, 12.55186365],
       [12.8932124 , 13.75839731, 13.54694135],
       [ 4.87746795,  5.24358118,  5.76290795]])

array([[11.7190995 , 12.90133076, 12.20369095],
       [ 7.24700145,  8.76689906,  8.44837957],
       [ 4.53471578,  5.15234396,  5.42496304]])


// (II) Across image/light-wise image gathering
(i) orig
clwp, clws, clwa = imgCollectLightWise('2-crop', lbs, 3, 3, 20, 0)
res = madLw(clwp, 3)
array([[13.67094243, 13.41687449, 13.45071233],
       [18.37338358, 19.39401257, 19.78289157],
       [ 7.11816398,  7.31839385,  6.60508945]])

(ii) hb
hblwp, hblws, hblwa = collectLightWise('3.1-nhb', lbs, 3, 3, 20, 0)
res = madLw(hblwp, 3)
array([[10.81007598, 11.25721145, 10.90809971],
       [ 8.09259486,  8.68595871,  8.75779826],
       [ 5.48437052,  5.86154844,  5.48781242]])

(iii) wp1
wp1lwp, wp1lws, wp1lwa = collectLightWise('3.2-nwp1', lbs, 3, 3, 20, 0)
res = madLw(wp1lwp, 3)
array([[15.11370438, 15.76355049, 15.54356509],
       [15.7978871 , 16.67489139, 16.76886683],
       [ 6.66895184,  6.25958819,  7.75881824]])

(iv) wp2
wp2lwp, wp2lws, wp2lwa = collectLightWise('3.3-nwp2', lbs, 3, 3, 20, 0)
res = madLw(wp2lwp, 3)
array([[16.245993  , 16.79415018, 16.21188938],
       [11.00674129, 11.79046323, 11.8814575 ],
       [ 6.45780652,  6.28866446,  7.42771955]])


// (III) Across light
(i) orig
ans = madAl(clwp, 3)
array([26.491351  , 29.69778441, 21.28309645])

(ii) hb
ans = madAl(hblwp, 3)
array([7.69008876, 8.17972069, 7.97018644])

(iii) wp1
ans = madAl(wp1lwp, 3)
array([19.28128027, 19.48409878, 18.94375747])

(iv) wp2
ans = madAl(wp2lwp, 3)
array([10.86573584, 11.21923596, 11.53536523])

(v) ANOVA
export(clwp, '4-dt', 10000)
export(hblwp, '4-dt', 10000)
export(wp1lwp, '4-dt', 10000)
export(wp2lwp, '4-dt', 10000)


**** MAD spot ****
// (I) Spot collection
(i) orig
clwp, clws, clwa = imgCollectLightWise('2-crop', lbs, 3, 3, 20, 12)
sfclws = shuffleSpot(clws)
cv2.imwrite('origsl1.jpg', clws[0][0][0])

(ii) hb
hblwp, hblws, hblwa = imgCollectLightWise('3.1-nhb', lbs, 3, 3, 20, 12)
sfhblws = shuffleSpot(hblws)
cv2.imwrite('hbsl1.jpg', hblws[0][0][0])

(iii) wp1
wp1lwp, wp1lws, wp1lwa = imgCollectLightWise('3.2-nwp1', lbs, 3, 3, 20, 12)
sfwp1lws = shuffleSpot(wp1lws)
cv2.imwrite('wp1sl1.jpg', wp1lws[0][0][0])

(iv) wp2
wp2lwp, wp2lws, wp2lwa = imgCollectLightWise('3.3-nwp2', lbs, 3, 3, 20, 12)
sfwp2lws = shuffleSpot(wp2lws)
cv2.imwrite('wp2sl1.jpg', wp2lws[0][0][0])


// (II) Across blocks/image-wise
def tool(lws, nlb, nlt, level):
	ans = []
	for i in range(0, nlb):
		if (level == 0):
			iwsclb = madIw(lws[i])
			ans.append(meanMadIw(iwsclb, nlt))
		elif (level == 1):
			ans.append(madLw(lws[i], 3))
		else:
			ans.append(madAl(lws[i], 3))
	return ans

(i) orig
ans = tool(clws, 3, 3, 0)


(ii) hb
ans = tool(hblws, 3, 3, 0)


(iii) wp1
ans = tool(wp1lws, 3, 3, 0)


(iv) wp2
ans = tool(wp2lws, 3, 3, 0)


// (II) Across image/light-wise
(i) orig
ans = tool(clws, 3, 3, 1)


(ii) hb
ans = tool(hblws, 3, 3, 1)


(iii) wp1
ans = tool(wp1lws, 3, 3, 1)


(iv) wp2
ans = tool(wp2lws, 3, 3, 1)



// (III) Across light
(i) orig
ans = tool(clws, 3, 3, 2)


(ii) hb
ans = tool(hblws, 3, 3, 2)


(iii) wp1
ans = tool(wp1lws, 3, 3, 2)


(iv) wp2
ans = tool(wp2lws, 3, 3, 2)


(v) ANOVA
export(clws[0], '4-dt', 1000)


**** Spot Distinctness ****
# Single image
hcol = prepareIw(sfclws, 0, 0, 3, 0)
hcol = prepareIw(sfhblws, 0, 0, 3, 0)

# light-wise
hcol = prepareLw(clws, 0, 3, 0)

# across-light
hcol = prepareAl(sfclws, 3, 0)

# draw
draw(hcol, .5)



**** Interval derivation ****



**** Across image/light-wise output
lbs = pd.read_csv("4-dt/labels.csv", header = None)
lbs = np.array(lbs)
lbs = lbs.transpose(1, 0)

# orig
dt = collectLw('2-crop', lbs, 2, 3) # v2
op = '4-dt/original_lightWise.csv'
wroutLw(dt, op)

# hb
dt = collectLw('3.1-nhb', lbs, 2, 3) # v2
op = '4-dt/histogramBased_lightWise.csv'
wroutLw(dt, op)

# wp1
dt = collectLw('3.2-nwp1', lbs, 2, 3) # v2
op = '4-dt/whitePatch1_lightWise.csv'
wroutLw(dt, op)

# wp2
dt = collectLw('3.3-nwp2', lbs, 2, 3) # v2
op = '4-dt/whitePatch2_lightWise.csv'
wroutLw(dt, op)


**** Test image output
nhbsdt = testImgDataOut('1-orig_tc','3.1-nhb', para, 0, .1, 200) 
wrout(nhbsdt, '4-dt/histogramBased_spotData.csv')
